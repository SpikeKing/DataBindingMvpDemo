plugins {
    id "me.tatarka.retrolambda" version "3.2.5"
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt' // 生成标注文件插件

def cfg = rootProject.ext

android {
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion cfg.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId "org.wangchenlong.mvpdatabindingdemo"
        //noinspection GroovyAssignabilityCheck
        minSdkVersion cfg.minSdkVersion
        //noinspection GroovyAssignabilityCheck
        targetSdkVersion cfg.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            minifyEnabled true
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 注释冲突
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // App's dependencies, including test
    compile "com.android.support:appcompat-v7:${cfg.supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${cfg.supportLibraryVersion}"
    compile "com.android.support:design:${cfg.supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${cfg.supportLibraryVersion}"
    compile "com.android.support:support-v4:${cfg.supportLibraryVersion}"
    compile "com.android.support.test.espresso:espresso-idling-resource:${cfg.espressoVersion}"
    compile "com.google.guava:guava:${cfg.guavaVersion}"

    // ButterKnife
    compile "com.jakewharton:butterknife:8.0.1"
    apt "com.jakewharton:butterknife-compiler:8.0.1"

    // Dependencies for local unit tests
    testCompile "junit:junit:${cfg.junitVersion}"
    testCompile "org.mockito:mockito-all:${cfg.mockitoVersion}"
    testCompile "org.hamcrest:hamcrest-all:${cfg.hamcrestVersion}"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:${cfg.runnerVersion}"
    androidTestCompile "com.android.support.test:rules:${cfg.runnerVersion}"

    // Dependencies for Android unit tests
    androidTestCompile "junit:junit:${cfg.junitVersion}"
    androidTestCompile "org.mockito:mockito-core:${cfg.mockitoVersion}"
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Espresso UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:${cfg.espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${cfg.espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${cfg.espressoVersion}"

    // Resolve conflicts between main and test APK:
    androidTestCompile "com.android.support:support-annotations:${cfg.supportLibraryVersion}"
    androidTestCompile "com.android.support:support-v4:${cfg.supportLibraryVersion}"
    androidTestCompile "com.android.support:recyclerview-v7:${cfg.supportLibraryVersion}"
}
